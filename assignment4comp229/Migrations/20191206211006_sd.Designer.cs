// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using assignment4comp229.Models;

namespace assignment4comp229.Migrations
{
    [DbContext(typeof(SeedData))]
    [Migration("20191206211006_sd")]
    partial class sd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("assignment4comp229.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EditDate");

                    b.Property<byte[]>("Icon");

                    b.Property<string>("Ingredients");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ReviewId");

                    b.Property<string>("Time");

                    b.Property<string>("UserName");

                    b.HasKey("RecipeId");

                    b.HasIndex("ReviewId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CreationDate = new DateTime(2019, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Simple apple pie",
                            Ingredients = "6 cups sliced apples, 3/4 cup white sugar, 1tbsp butter, 1tsp cinnamon, 1 pastry",
                            Name = "Apple Pie",
                            Time = "1 hour",
                            UserName = "Default User"
                        },
                        new
                        {
                            RecipeId = 2,
                            CreationDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quick and simple, but delicious!",
                            Ingredients = "2tbsp olive oil, 1 chopped onion, chicken breast, 3tbsp ketchup, 2tbsp soy sauce, 2tbsp lemon juice, 1tsp black pepper",
                            Name = "Simple Chicken Dish",
                            Time = "35 minutes",
                            UserName = "Default User"
                        });
                });

            modelBuilder.Entity("assignment4comp229.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Rating");

                    b.Property<int>("RecipeId");

                    b.Property<string>("RecipeReview");

                    b.Property<string>("UserPosted");

                    b.HasKey("ReviewId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1058,
                            Rating = 4.0,
                            RecipeId = 1,
                            RecipeReview = "It was alright."
                        },
                        new
                        {
                            ReviewId = 1059,
                            Rating = 4.5,
                            RecipeId = 1,
                            RecipeReview = "Delicious, but basic."
                        },
                        new
                        {
                            ReviewId = 60,
                            Rating = 5.0,
                            RecipeId = 2,
                            RecipeReview = "Amazing!"
                        });
                });

            modelBuilder.Entity("assignment4comp229.Models.Recipe", b =>
                {
                    b.HasOne("assignment4comp229.Models.Review")
                        .WithMany("Recipes")
                        .HasForeignKey("ReviewId");
                });
#pragma warning restore 612, 618
        }
    }
}
